{
  "openapi": "3.0.0",
  "info": {
    "title": "Gerenciamento de Usuario",
    "version": "1.0.0",
    "description": "API para gerenciamento de usuario."
  },
  "paths": {
    "/usuarios": {
      "post": {
        "summary": "Criar um novo usuário",
		"description": "Este endpoint permite a criação de um novo usuário no sistema. Todos os campos obrigatórios devem ser preenchidos. Para o campo tipo, considerar os seguintes valores possíveis (0.Administrador 1.Cliente 2.Funcionario).",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nome": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "senha": {
                    "type": "string",
                    "format": "password",
                    "example": "SenhaSegura123"
                  },
                  "login": {
                    "type": "string"
                  },
                  "tipo": {
                    "type": "integer",
                    "enum": [0,1,2]
                  }
                },
                "required": ["nome", "email", "senha", "login", "tipo"]
              }
            }
          }
        },
        "responses": {  
          "201": {
            "description": "Created."
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "mensagem": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "example": {
                    "mensagem": [
                      "Já existe um usuário cadastrado com este login.",
                      "Já existe um usuário cadastrado com este e-mail.",
					  "O tipo de usuário é obrigatório"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          }			  
        }
      },
      "get": {
        "summary": "Consulta usuários",
	    "description": "Este endpoint permite a listagem de usuários do sistema. Para usuários ativos, defenir parametro ativo como true ou vazio. Para usuários inativos, defenir parametro ativo como false.",
        "parameters": [
          {
            "in": "query",
            "name": "ativo",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de usuários encontrados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "nome": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string",
                        "format": "email"
                      },
                      "login": {
                        "type": "string"
                      },
                      "tipo": {
                        "type": "integer"
                      },
                      "dataCriacao": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "dataAtualizacao": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": 1,
                    "nome": "João Menzel",
                    "email": "jo@example.com",
                    "login": "jomenzel",
                    "tipo": 1,
                    "dataCriacao": "2025-05-02T21:18:06.938145",
                    "dataAtualizacao": "2025-05-02T21:18:06.938145"
                  }
                ]
              }
            }
          },
          "204": {
            "description": "No Content."
          },
          "401": {
            "description": "Unauthorized."
          }		  
        }
      }
    },
    "/usuarios/{id}": {
      "put": {
        "summary": "Atualizar um usuário existente",
        "description": "Ao menos um dado do usuário deve ser atualizado.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID do Usuário.",			
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário atualizado com sucesso"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "mensagem": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "example": {
                    "mensagem": [
                      "Já existe um usuário cadastrado com este e-mail.",
                      "Já existe um usuário cadastrado com este login.",
					  "Pelo menos um campo deve ser informado para atualização.",
					  "Usuário não encontrado"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          }			  
        }
      },
      "delete": {
        "summary": "Desativar um usuário existente",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID do Usuário.",			
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário desativado com sucesso"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "mensagem": {
                       "type": "string"
                    }					
                  }
                },
                "example": {
                    "mensagem": "Usuário não encontrado"			
                }				
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          }		  
        }
      }
    },
	"/login": {
      "post": {
        "summary": "Realiza o login do usuário",
        "description": "Endpoint para autenticar um usuário com email e senha.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "login": {
                    "type": "string",
                    "format": "login",
                    "example": "ccampos"
                  },
                  "senha": {
                    "type": "string",
                    "format": "password",
                    "example": "SenhaSegura123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login bem-sucedido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "login": {
                       "type": "string"
                    },
                    "senha": {
                       "type": "string"
                    },					
                  }
                },
                "example": {
                    "login": "A senha não deve ser vazia",
                    "senha": "O login não deve ser vazio"				
                }				
              }
            }
          },		  
          "401": {
            "description": "Unauthorized."
          }		  
        }
      }
    },
    "/login/atualiza-senha": {
      "put": {
        "summary": "Atualiza a senha do usuário",
        "description": "Endpoint para atualizar as credenciais (senha) do usuário.",
        "parameters": [
          {
            "name": "Authorization",   
            "in": "header",			
            "required": true,         
            "description": "Token de autenticação do usuário.",
            "schema": {
              "type": "string"        
            }
          }
        ],		
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "senha": {
                    "type": "string",
                    "format": "password",
                    "example": "NovaSenhaSegura123"
                  },
                  "confirmacaoSenha": {
                    "type": "string",
                    "format": "password",
                    "example": "NovaSenhaSegura123"
                  }
                },
				"required": ["senha", "confirmacaoSenha"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Senha atualizada com sucesso"
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "senha": {
                       "type": "string"
                    },
                    "confirmacaoSenha": {
                       "type": "string"
                    },					
                  }
                },
                "example": {
                    "senha": "A senha e a confirmação da senha devem ser iguais.",
                    "confirmacaoSenha": "A senha e a confirmação da senha devem ser iguais."				
                }				
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "type": "object",
                    "properties": {
                      "mensagem": {
                        "type": "string"
                      }				  
                    }
                  }
                },
                "example": {
                    "mensagem": "Usuário ou senha inválidos"				
                }
              }
            }			
          }		  
        }
      }
    },
    "/enderecos": {
      "post": {
        "summary": "Criação de Endereço do usuário",
        "description": "Endpoint de criação de enderaço para o usuário.",
        "parameters": [
          {
            "name": "Authorization",   
            "in": "header",			
            "required": true,         
            "description": "Token de autenticação do usuário.",
            "schema": {
              "type": "string"        
            }
          }
        ],		
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rua": {
                    "type": "string",
                    "example": "Avenida Paulista"
                  },
                  "cep": {
                    "type": "string",
                    "example": "05577-903"
                  },
                  "numero": {
                    "type": "string",
                    "example": "89"
                  },
                  "usuarioId": {
                    "type": "integer",
                    "example": "2"
                  }				  
                },
				"required": ["rua", "cep", "numero", "usuarioId"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"			
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "rua": {
                        "type": "string"
                      },
                      "cep": {
                        "type": "string"
                      },
                      "numero": {
                        "type": "integer"
                      },
                      "usuarioId": {
                        "type": "integer"
                      }					  
                    }
                  }
                },
                "example": {
                    "rua": "Rua é obrigatória",
                    "cep": "CEP é obrigatório",
                    "numero": "Número é obrigatório",
                    "usuarioId": "ID do usuário é obrigatório",
                    "mensagem": "O usuário já possui um endereço cadastrado com este CEP"					
                }
              }
            }			
          },
          "401": {
            "description": "Erro na requisição."
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "type": "object",
                    "properties": {
                      "mensagem": {
                        "type": "string"
                      }				  
                    }
                  }
                },
                "example": {
                    "mensagem": "Acesso não autorizado"				
                }
              }
            }			
          }		  
        }
      },
      "delete": {
        "summary": "Exclusão de endereço do usuário",
        "parameters": [
          {
            "name": "Authorization",   
            "in": "header",			
            "required": true,         
            "description": "Token de autenticação do usuário.",
            "schema": {
              "type": "string"        
            }
          }
        ],		
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enderecoId": {
                    "type": "integer",
                    "example": "3"
                  },
                  "usuarioId": {
                    "type": "integer",
                    "example": "1"
                  }			  
                },
				"required": ["enderecoId", "usuarioId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Endereço excluido com sucesso."
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "type": "object",
                    "properties": {
                      "mensagem": {
                        "type": "string"
                      }				  
                    }
                  }
                },
                "example": {
                    "mensagem": "Endereço não encontrado"				
                }
              }
            }			
          },		  
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "type": "object",
                    "properties": {
                      "mensagem": {
                        "type": "string"
                      }				  
                    }
                  }
                },
                "example": {
                    "mensagem": "Acesso não autorizado"				
                }
              }
            }			
          }	  
        }
      }	  
    },
    "/enderecos/{id}": {
      "put": {
        "summary": "Atualizar Endereço do usuário",
        "description": "Endpoint de atualização do endereço do usuário. Deve ser informado o ID do endereço a ser modificado e os dados que serão alterados. Ao menos um dado deve ser informado no corpo da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID do Endereço.",			
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",   
            "in": "header",			
            "required": true,         
            "description": "Token de autenticação do usuário.",
            "schema": {
              "type": "string"        
            }
          }		  
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rua": {
                    "type": "string",
                    "example": "Avenida Paulista"
                  },
                  "cep": {
                    "type": "string",
                    "example": "05577-903"
                  },
                  "numero": {
                    "type": "string",
                    "example": "89"
                  },
                  "usuarioId": {
                    "type": "integer",
                    "example": "1"
                  }					  
                },
                "required": ["rua", "cep", "numero","usuarioId"]
              }
            }
          }
        },		
        "responses": {
          "200": {
            "description": "Atualização realizada com sucesso."			
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "type": "object",
                    "properties": {
                      "mensagem": {
                        "type": "string"
                      },	
                      "mensagem1": {
                        "type": "string"
                      }						  
                    }
                  }
                },
                "example": {
                    "mensagem": "Endereço não encontrado",
                    "mensagem1": "Este endereço não pertence ao usuário informado"					
                }
              }
            }			
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "type": "object",
                    "properties": {
                      "mensagem": {
                        "type": "string"
                      }				  
                    }
                  }
                },
                "example": {
                    "mensagem": "Acesso não autorizado"				
                }
              }
            }			
          }		  
        }
      }
    },
    "/enderecos/usuario/{id}": {
      "get": {
        "summary": "Listar Endereço(s) do usuário",
        "description": "Endpoint de listagem do(s) endereço(s) do usuário. Deve ser informado o ID do usuário no endpoint.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID do Usuário.",			
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",   
            "in": "header",			
            "required": true,         
            "description": "Token de autenticação do usuário.",
            "schema": {
              "type": "string"        
            }
          }		  
        ],	
        "responses": {
          "200": {
            "description": "Listado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "rua": {
                        "type": "string"
                      },
                      "cep": {
                        "type": "string"
                      },
                      "numero": {
                        "type": "integer"
                      },
                      "ativo": {
                        "type": "boolean"
                      },
                      "dataCriacao": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "dataAtualizacao": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": 1,
                    "rua": "Avenida Paulista",
                    "cep": "05577-903",
                    "numero": "89",
                    "ativo": true,
                    "dataCriacao": "2025-05-02T21:18:06.938145",
                    "dataAtualizacao": "2025-05-02T21:18:06.938145"
                  }
                ]
              }
            }			
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "type": "object",
                    "properties": {
                      "mensagem": {
                        "type": "string"
                      }				  
                    }
                  }
                },
                "example": {
                    "mensagem": "Acesso não autorizado"				
                }
              }
            }			
          }			  
        }
      }
    }	
  }
}